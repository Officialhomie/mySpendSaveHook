Compiling 1 files with Solc 0.8.26
Solc 0.8.26 finished in 77.67s
Compiler run successful with warnings:
Warning (2519): This declaration shadows an existing declaration.
   --> src/SpendSaveStorage.sol:689:27:
    |
689 |     function getAllowance(address owner, address spender, uint256 id) external view onlyModule returns (uint256) {
    |                           ^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> src/SpendSaveStorage.sol:32:5:
   |
32 |     address public owner;
   |     ^^^^^^^^^^^^^^^^^^^^

Warning (2519): This declaration shadows an existing declaration.
   --> src/SpendSaveStorage.sol:693:27:
    |
693 |     function setAllowance(address owner, address spender, uint256 id, uint256 amount) external onlyModule {
    |                           ^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> src/SpendSaveStorage.sol:32:5:
   |
32 |     address public owner;
   |     ^^^^^^^^^^^^^^^^^^^^

Warning (8760): This declaration has the same name as another declaration.
   --> src/DCA.sol:191:9:
    |
191 |         bool enableDCA,
    |         ^^^^^^^^^^^^^^
Note: The other declaration is here:
   --> src/DCA.sol:154:5:
    |
154 |     function enableDCA(address user, address targetToken, bool enabled) external override onlyAuthorized(user) nonReentrant {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning (8760): This declaration has the same name as another declaration.
   --> src/DCA.sol:341:16:
    |
341 |         (,,,,, bool enableDCA,,) = storage_.getUserSavingStrategy(user);
    |                ^^^^^^^^^^^^^^
Note: The other declaration is here:
   --> src/DCA.sol:154:5:
    |
154 |     function enableDCA(address user, address targetToken, bool enabled) external override onlyAuthorized(user) nonReentrant {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning (2519): This declaration shadows an existing declaration.
  --> src/DCA.sol:71:5:
   |
71 |     error InsufficientSavings(address token, uint256 requested, uint256 available);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> src/SpendSaveStorage.sol:22:1:
   |
22 | error InsufficientSavings();
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning (2519): This declaration shadows an existing declaration.
  --> src/DailySavings.sol:63:5:
   |
63 |     error InsufficientBalance(uint256 required, uint256 available);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> src/SpendSaveStorage.sol:26:1:
   |
26 | error InsufficientBalance();
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning (2519): This declaration shadows an existing declaration.
  --> src/DailySavings.sol:65:5:
   |
65 |     error InsufficientSavings(address token, uint256 required, uint256 available);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> src/SpendSaveStorage.sol:22:1:
   |
22 | error InsufficientSavings();
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning (2519): This declaration shadows an existing declaration.
  --> src/DailySavings.sol:69:5:
   |
69 |     error ReentrancyGuardReentered();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> src/SpendSaveStorage.sol:28:1:
   |
28 | error ReentrancyGuardReentered();
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning (2519): This declaration shadows an existing declaration.
  --> src/Savings.sol:37:5:
   |
37 |     error InsufficientSavings(address token, uint256 requested, uint256 available);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> src/SpendSaveStorage.sol:22:1:
   |
22 | error InsufficientSavings();
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning (2519): This declaration shadows an existing declaration.
  --> src/Token.sol:31:5:
   |
31 |     error InsufficientBalance(address owner, uint256 tokenId, uint256 requested, uint256 available);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> src/SpendSaveStorage.sol:26:1:
   |
26 | error InsufficientBalance();
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning (5667): Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> src/SpendSaveStorage.sol:290:39:
    |
290 |     function _calculateAndTransferFee(address user, address token, uint256 amount) internal returns (uint256) {
    |                                       ^^^^^^^^^^^^

Warning (2072): Unused local variable.
   --> src/DCA.sol:497:13:
    |
497 |             uint256 amount,
    |             ^^^^^^^^^^^^^^

Warning (5667): Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> src/DCA.sol:817:9:
    |
817 |         PoolKey memory poolKey,
    |         ^^^^^^^^^^^^^^^^^^^^^^

Warning (5667): Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> src/DCA.sol:877:9:
    |
877 |         SpendSaveStorage.DCAExecution memory dca
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning (2072): Unused local variable.
   --> src/DailySavings.sol:483:24:
    |
483 |         (bool enabled, uint256 lastExecutionTime, uint256 startTime, uint256 goalAmount, , uint256 penaltyBps, uint256 endTime) = 
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^

Warning (2072): Unused local variable.
   --> src/DailySavings.sol:483:51:
    |
483 |         (bool enabled, uint256 lastExecutionTime, uint256 startTime, uint256 goalAmount, , uint256 penaltyBps, uint256 endTime) = 
    |                                                   ^^^^^^^^^^^^^^^^^

Warning (5667): Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> src/DailySavings.sol:615:9:
    |
615 |         uint256 lastExecutionTime,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^

Warning (5667): Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> src/DailySavings.sol:616:9:
    |
616 |         uint256 startTime,
    |         ^^^^^^^^^^^^^^^^^

Warning (5667): Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> src/SlippageControl.sol:105:9:
    |
105 |         address fromToken,
    |         ^^^^^^^^^^^^^^^^^

Warning (5667): Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> src/SpendSaveHook.sol:168:9:
    |
168 |         bytes calldata hookData
    |         ^^^^^^^^^^^^^^^^^^^^^^^

Warning (5667): Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> src/SpendSaveHook.sol:260:9:
    |
260 |         IPoolManager.SwapParams calldata params,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning (5667): Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> src/SpendSaveHook.sol:262:9:
    |
262 |         bytes calldata hookData
    |         ^^^^^^^^^^^^^^^^^^^^^^^

Warning (2072): Unused local variable.
   --> src/SpendSaveHook.sol:308:35:
    |
308 |             (uint256 savedAmount, bool success) = _processSingleToken(user, token);
    |                                   ^^^^^^^^^^^^

Warning (2072): Unused local variable.
   --> src/SpendSaveHook.sol:377:10:
    |
377 |         (address outputToken, uint256 outputAmount) = _getOutputTokenAndAmount(key, delta);
    |          ^^^^^^^^^^^^^^^^^^^

Warning (5667): Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> src/SpendSaveHook.sol:553:9:
    |
553 |         bytes calldata data
    |         ^^^^^^^^^^^^^^^^^^^

Warning (2018): Function state mutability can be restricted to pure
   --> src/DCA.sol:977:5:
    |
977 |     function createPoolKey(address tokenA, address tokenB) internal view returns (PoolKey memory) {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning (2018): Function state mutability can be restricted to pure
   --> src/SavingStrategy.sol:335:5:
    |
335 |     function _calculateInputSavings(
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning (2018): Function state mutability can be restricted to view
   --> src/SpendSaveHook.sol:552:5:
    |
552 |     function lockAcquired(
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning (2018): Function state mutability can be restricted to view
   --> test/SpendSaveHook.t.sol:267:5:
    |
267 |     function testSetup() public {
    |     ^ (Relevant source part starts here and spans across multiple lines).


Ran 1 test for test/SpendSaveHook.t.sol:SpendSaveHookTest
[PASS] testSetup() (gas: 12857)
Logs:
  ============ SETUP START ============
  Deploying core contracts...
  Deploying storage...
  Deploying modules...
  Deploying hook using HookMiner...
  Hook address will be: 0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0
  Flags: 192
  Hook deployed at: 0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0
  Hook flags: 192
  ============ SETUP COMPLETE ============
  Initializing test pool with hook...
  Pool initialized successfully
  Liquidity added successfully
  Setup test passed!

Traces:
  [31563472] SpendSaveHookTest::setUp()
    ├─ [0] console::log("============ SETUP START ============") [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] console::log("Deploying core contracts...") [staticcall]
    │   └─ ← [Stop] 
    ├─ [3457919] → new PoolManager@0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f
    │   ├─ emit OwnershipTransferred(user: 0x0000000000000000000000000000000000000000, newOwner: SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 17151 bytes of code
    ├─ [1008317] → new PoolSwapTest@0x2e234DAe75C793f67A35089C9d99245E1C58470b
    │   └─ ← [Return] 5035 bytes of code
    ├─ [489977] → new SwapRouterNoChecks@0xF62849F9A0B5Bf2913b396098F7c7019b51A820a
    │   └─ ← [Return] 2446 bytes of code
    ├─ [907811] → new PoolModifyLiquidityTest@0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9
    │   └─ ← [Return] 4533 bytes of code
    ├─ [696381] → new PoolModifyLiquidityTestNoChecks@0xc7183455a4C133Ae270771860664b6B7ec320bB1
    │   └─ ← [Return] 3477 bytes of code
    ├─ [679177] → new PoolDonateTest@0xa0Cb889707d426A7A386870A03bc70d1b0697598
    │   └─ ← [Return] 3391 bytes of code
    ├─ [568083] → new PoolTakeTest@0x1d1499e622D69689cdf9004d05Ec547d650Ff211
    │   └─ ← [Return] 2836 bytes of code
    ├─ [437541] → new PoolClaimsTest@0xA4AD4f68d0b91CFD19687c881e50f3A00242828c
    │   └─ ← [Return] 2184 bytes of code
    ├─ [3278912] → new PoolNestedActionsTest@0x03A6a84cD762D9707A21605b548aaaB891562aAb
    │   ├─ [2171890] → new NestedActionExecutor@0x61a0009C8E5f6e87CAf2D3B57081c27882a0187e
    │   │   └─ ← [Return] 9496 bytes of code
    │   └─ ← [Return] 4914 bytes of code
    ├─ [0] VM::addr(<pk>) [staticcall]
    │   └─ ← [Return] feeController: [0xb52F5153576Ca8b1d3eD645A8F76809Bd1a62620]
    ├─ [0] VM::label(feeController: [0xb52F5153576Ca8b1d3eD645A8F76809Bd1a62620], "feeController")
    │   └─ ← [Return] 
    ├─ [1662004] → new ActionsRouter@0xD6BbDE9174b1CdAa358d2Cf4D57D1a9F7178FBfF
    │   └─ ← [Return] 8079 bytes of code
    ├─ [23843] PoolManager::setProtocolFeeController(feeController: [0xb52F5153576Ca8b1d3eD645A8F76809Bd1a62620])
    │   ├─ emit ProtocolFeeControllerUpdated(protocolFeeController: feeController: [0xb52F5153576Ca8b1d3eD645A8F76809Bd1a62620])
    │   └─ ← [Stop] 
    ├─ [594578] → new MockERC20@0x15cF58144EF33af1e14b5208015d11F9143E27b9
    │   └─ ← [Return] 2736 bytes of code
    ├─ [594578] → new MockERC20@0x212224D2F2d262cd093eE13240ca4873fcCBbA3C
    │   └─ ← [Return] 2736 bytes of code
    ├─ [594578] → new MockERC20@0x2a07706473244BC757E10F2a9E86fB532828afe3
    │   └─ ← [Return] 2736 bytes of code
    ├─ [46498] MockERC20::mint(ECRecover: [0x0000000000000000000000000000000000000001], 100000000000000000000 [1e20])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: ECRecover: [0x0000000000000000000000000000000000000001], amount: 100000000000000000000 [1e20])
    │   └─ ← [Stop] 
    ├─ [46498] MockERC20::mint(ECRecover: [0x0000000000000000000000000000000000000001], 100000000000000000000 [1e20])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: ECRecover: [0x0000000000000000000000000000000000000001], amount: 100000000000000000000 [1e20])
    │   └─ ← [Stop] 
    ├─ [46498] MockERC20::mint(ECRecover: [0x0000000000000000000000000000000000000001], 100000000000000000000 [1e20])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: ECRecover: [0x0000000000000000000000000000000000000001], amount: 100000000000000000000 [1e20])
    │   └─ ← [Stop] 
    ├─ [24598] MockERC20::mint(SHA-256: [0x0000000000000000000000000000000000000002], 100000000000000000000 [1e20])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: SHA-256: [0x0000000000000000000000000000000000000002], amount: 100000000000000000000 [1e20])
    │   └─ ← [Stop] 
    ├─ [24598] MockERC20::mint(SHA-256: [0x0000000000000000000000000000000000000002], 100000000000000000000 [1e20])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: SHA-256: [0x0000000000000000000000000000000000000002], amount: 100000000000000000000 [1e20])
    │   └─ ← [Stop] 
    ├─ [24598] MockERC20::mint(SHA-256: [0x0000000000000000000000000000000000000002], 100000000000000000000 [1e20])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: SHA-256: [0x0000000000000000000000000000000000000002], amount: 100000000000000000000 [1e20])
    │   └─ ← [Stop] 
    ├─ [24598] MockERC20::mint(SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 1000000000000000000000 [1e21])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], amount: 1000000000000000000000 [1e21])
    │   └─ ← [Stop] 
    ├─ [24598] MockERC20::mint(SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 1000000000000000000000 [1e21])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], amount: 1000000000000000000000 [1e21])
    │   └─ ← [Stop] 
    ├─ [24598] MockERC20::mint(SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 1000000000000000000000 [1e21])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], amount: 1000000000000000000000 [1e21])
    │   └─ ← [Stop] 
    ├─ [0] console::log("Deploying storage...") [staticcall]
    │   └─ ← [Stop] 
    ├─ [2057373] → new SpendSaveStorage@0x3D7Ebc40AF7092E3F1C81F2e996cbA5Cae2090d7
    │   └─ ← [Return] 9611 bytes of code
    ├─ [0] console::log("Deploying modules...") [staticcall]
    │   └─ ← [Stop] 
    ├─ [1368118] → new SavingStrategy@0xD16d567549A2a2a2005aEACf7fB193851603dd70
    │   └─ ← [Return] 6723 bytes of code
    ├─ [1675251] → new Savings@0x96d3F6c20EEd2697647F543fE6C08bC2Fbf39758
    │   └─ ← [Return] 8257 bytes of code
    ├─ [2008421] → new DCA@0x13aa49bAc059d709dd0a18D6bb63290076a702D7
    │   └─ ← [Return] 9921 bytes of code
    ├─ [552874] → new SlippageControl@0xDB25A7b768311dE128BBDa7B8426c3f9C74f3240
    │   └─ ← [Return] 2651 bytes of code
    ├─ [1455607] → new Token@0x3381cD18e2Fb4dB236BF0525938AB6E43Db0440f
    │   └─ ← [Return] 7160 bytes of code
    ├─ [1584869] → new DailySavings@0x756e0562323ADcDA4430d6cb456d9151f605290B
    │   └─ ← [Return] 7916 bytes of code
    ├─ [39299] → new MockYieldModule@0x1aF7f588A501EA2B5bB3feeFA744892aA2CF00e6
    │   └─ ← [Return] 196 bytes of code
    ├─ [0] VM::startPrank(SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 
    ├─ [23976] SpendSaveStorage::setSavingStrategyModule(SavingStrategy: [0xD16d567549A2a2a2005aEACf7fB193851603dd70])
    │   └─ ← [Stop] 
    ├─ [22854] SpendSaveStorage::setSavingsModule(Savings: [0x96d3F6c20EEd2697647F543fE6C08bC2Fbf39758])
    │   └─ ← [Stop] 
    ├─ [22568] SpendSaveStorage::setDCAModule(DCA: [0x13aa49bAc059d709dd0a18D6bb63290076a702D7])
    │   └─ ← [Stop] 
    ├─ [22502] SpendSaveStorage::setSlippageControlModule(SlippageControl: [0xDB25A7b768311dE128BBDa7B8426c3f9C74f3240])
    │   └─ ← [Stop] 
    ├─ [22986] SpendSaveStorage::setTokenModule(Token: [0x3381cD18e2Fb4dB236BF0525938AB6E43Db0440f])
    │   └─ ← [Stop] 
    ├─ [23800] SpendSaveStorage::setDailySavingsModule(DailySavings: [0x756e0562323ADcDA4430d6cb456d9151f605290B])
    │   └─ ← [Stop] 
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return] 
    ├─ [0] console::log("Deploying hook using HookMiner...") [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] console::log("Hook address will be:", TestSpendSaveHook: [0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0]) [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] console::log("Flags:", 192) [staticcall]
    │   └─ ← [Stop] 
    ├─ [1607917] → new TestSpendSaveHook@0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0
    │   └─ ← [Return] 8022 bytes of code
    ├─ [0] console::log("Hook deployed at:", TestSpendSaveHook: [0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0]) [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] console::log("Hook flags:", 192) [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] VM::startPrank(SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 
    ├─ [24086] SpendSaveStorage::setSpendSaveHook(TestSpendSaveHook: [0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0])
    │   └─ ← [Stop] 
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return] 
    ├─ [0] VM::startPrank(SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 
    ├─ [23981] SavingStrategy::initialize(SpendSaveStorage: [0x3D7Ebc40AF7092E3F1C81F2e996cbA5Cae2090d7])
    │   ├─ emit ModuleInitialized(storage_: SpendSaveStorage: [0x3D7Ebc40AF7092E3F1C81F2e996cbA5Cae2090d7])
    │   └─ ← [Return] 
    ├─ [23574] Savings::initialize(SpendSaveStorage: [0x3D7Ebc40AF7092E3F1C81F2e996cbA5Cae2090d7])
    │   ├─ emit ModuleInitialized(storage_: SpendSaveStorage: [0x3D7Ebc40AF7092E3F1C81F2e996cbA5Cae2090d7])
    │   └─ ← [Return] 
    ├─ [23942] DCA::initialize(SpendSaveStorage: [0x3D7Ebc40AF7092E3F1C81F2e996cbA5Cae2090d7])
    │   ├─ emit ModuleInitialized(storage_: SpendSaveStorage: [0x3D7Ebc40AF7092E3F1C81F2e996cbA5Cae2090d7])
    │   └─ ← [Return] 
    ├─ [23615] SlippageControl::initialize(SpendSaveStorage: [0x3D7Ebc40AF7092E3F1C81F2e996cbA5Cae2090d7])
    │   ├─ emit ModuleInitialized(storage_: SpendSaveStorage: [0x3D7Ebc40AF7092E3F1C81F2e996cbA5Cae2090d7])
    │   └─ ← [Return] 
    ├─ [23713] Token::initialize(SpendSaveStorage: [0x3D7Ebc40AF7092E3F1C81F2e996cbA5Cae2090d7])
    │   ├─ emit ModuleInitialized(storage_: SpendSaveStorage: [0x3D7Ebc40AF7092E3F1C81F2e996cbA5Cae2090d7])
    │   └─ ← [Return] 
    ├─ [22544] DailySavings::initialize(SpendSaveStorage: [0x3D7Ebc40AF7092E3F1C81F2e996cbA5Cae2090d7])
    │   └─ ← [Return] 
    ├─ [25706] SavingStrategy::setModuleReferences(Savings: [0x96d3F6c20EEd2697647F543fE6C08bC2Fbf39758])
    │   ├─ [1195] SpendSaveStorage::owner() [staticcall]
    │   │   └─ ← [Return] SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]
    │   ├─ emit ModuleReferencesSet(savingsModule: Savings: [0x96d3F6c20EEd2697647F543fE6C08bC2Fbf39758])
    │   └─ ← [Stop] 
    ├─ [47670] Savings::setModuleReferences(Token: [0x3381cD18e2Fb4dB236BF0525938AB6E43Db0440f], SavingStrategy: [0xD16d567549A2a2a2005aEACf7fB193851603dd70])
    │   ├─ [1195] SpendSaveStorage::owner() [staticcall]
    │   │   └─ ← [Return] SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]
    │   ├─ emit ModuleReferencesSet(tokenModule: Token: [0x3381cD18e2Fb4dB236BF0525938AB6E43Db0440f], slippageModule: SavingStrategy: [0xD16d567549A2a2a2005aEACf7fB193851603dd70])
    │   └─ ← [Stop] 
    ├─ [48044] DCA::setModuleReferences(Token: [0x3381cD18e2Fb4dB236BF0525938AB6E43Db0440f], SlippageControl: [0xDB25A7b768311dE128BBDa7B8426c3f9C74f3240])
    │   ├─ [1195] SpendSaveStorage::owner() [staticcall]
    │   │   └─ ← [Return] SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]
    │   ├─ emit ModuleReferencesSet(tokenModule: Token: [0x3381cD18e2Fb4dB236BF0525938AB6E43Db0440f], slippageModule: SlippageControl: [0xDB25A7b768311dE128BBDa7B8426c3f9C74f3240])
    │   └─ ← [Stop] 
    ├─ [46385] DailySavings::setModuleReferences(Token: [0x3381cD18e2Fb4dB236BF0525938AB6E43Db0440f], MockYieldModule: [0x1aF7f588A501EA2B5bB3feeFA744892aA2CF00e6])
    │   ├─ [1195] SpendSaveStorage::owner() [staticcall]
    │   │   └─ ← [Return] SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]
    │   └─ ← [Return] 
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return] 
    ├─ [0] VM::startPrank(SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496])
    │   └─ ← [Return] 
    ├─ [137660] TestSpendSaveHook::initializeModules(SavingStrategy: [0xD16d567549A2a2a2005aEACf7fB193851603dd70], Savings: [0x96d3F6c20EEd2697647F543fE6C08bC2Fbf39758], DCA: [0x13aa49bAc059d709dd0a18D6bb63290076a702D7], SlippageControl: [0xDB25A7b768311dE128BBDa7B8426c3f9C74f3240], Token: [0x3381cD18e2Fb4dB236BF0525938AB6E43Db0440f], DailySavings: [0x756e0562323ADcDA4430d6cb456d9151f605290B])
    │   ├─ [1195] SpendSaveStorage::owner() [staticcall]
    │   │   └─ ← [Return] SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]
    │   ├─ emit ModulesInitialized(strategyModule: SavingStrategy: [0xD16d567549A2a2a2005aEACf7fB193851603dd70], savingsModule: Savings: [0x96d3F6c20EEd2697647F543fE6C08bC2Fbf39758], dcaModule: DCA: [0x13aa49bAc059d709dd0a18D6bb63290076a702D7], slippageModule: SlippageControl: [0xDB25A7b768311dE128BBDa7B8426c3f9C74f3240], tokenModule: Token: [0x3381cD18e2Fb4dB236BF0525938AB6E43Db0440f], dailySavingsModule: DailySavings: [0x756e0562323ADcDA4430d6cb456d9151f605290B])
    │   └─ ← [Stop] 
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return] 
    ├─ [24305] MockERC20::approve(PoolSwapTest: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   ├─ emit Approval(owner: SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], spender: PoolSwapTest: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   └─ ← [Return] true
    ├─ [24305] MockERC20::approve(PoolSwapTest: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   ├─ emit Approval(owner: SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], spender: PoolSwapTest: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   └─ ← [Return] true
    ├─ [24305] MockERC20::approve(PoolSwapTest: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   ├─ emit Approval(owner: SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], spender: PoolSwapTest: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   └─ ← [Return] true
    ├─ [24305] MockERC20::approve(TestSpendSaveHook: [0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   ├─ emit Approval(owner: SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], spender: TestSpendSaveHook: [0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0], amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   └─ ← [Return] true
    ├─ [24305] MockERC20::approve(TestSpendSaveHook: [0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   ├─ emit Approval(owner: SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], spender: TestSpendSaveHook: [0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0], amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   └─ ← [Return] true
    ├─ [24305] MockERC20::approve(TestSpendSaveHook: [0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   ├─ emit Approval(owner: SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], spender: TestSpendSaveHook: [0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0], amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   └─ ← [Return] true
    ├─ [0] VM::startPrank(ECRecover: [0x0000000000000000000000000000000000000001])
    │   └─ ← [Return] 
    ├─ [24305] MockERC20::approve(PoolSwapTest: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   ├─ emit Approval(owner: ECRecover: [0x0000000000000000000000000000000000000001], spender: PoolSwapTest: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   └─ ← [Return] true
    ├─ [24305] MockERC20::approve(PoolSwapTest: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   ├─ emit Approval(owner: ECRecover: [0x0000000000000000000000000000000000000001], spender: PoolSwapTest: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   └─ ← [Return] true
    ├─ [24305] MockERC20::approve(PoolSwapTest: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   ├─ emit Approval(owner: ECRecover: [0x0000000000000000000000000000000000000001], spender: PoolSwapTest: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   └─ ← [Return] true
    ├─ [24305] MockERC20::approve(TestSpendSaveHook: [0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   ├─ emit Approval(owner: ECRecover: [0x0000000000000000000000000000000000000001], spender: TestSpendSaveHook: [0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0], amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   └─ ← [Return] true
    ├─ [24305] MockERC20::approve(TestSpendSaveHook: [0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   ├─ emit Approval(owner: ECRecover: [0x0000000000000000000000000000000000000001], spender: TestSpendSaveHook: [0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0], amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   └─ ← [Return] true
    ├─ [24305] MockERC20::approve(TestSpendSaveHook: [0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   ├─ emit Approval(owner: ECRecover: [0x0000000000000000000000000000000000000001], spender: TestSpendSaveHook: [0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0], amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   └─ ← [Return] true
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return] 
    ├─ [0] VM::startPrank(SHA-256: [0x0000000000000000000000000000000000000002])
    │   └─ ← [Return] 
    ├─ [24305] MockERC20::approve(PoolSwapTest: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   ├─ emit Approval(owner: SHA-256: [0x0000000000000000000000000000000000000002], spender: PoolSwapTest: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   └─ ← [Return] true
    ├─ [24305] MockERC20::approve(PoolSwapTest: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   ├─ emit Approval(owner: SHA-256: [0x0000000000000000000000000000000000000002], spender: PoolSwapTest: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   └─ ← [Return] true
    ├─ [24305] MockERC20::approve(PoolSwapTest: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   ├─ emit Approval(owner: SHA-256: [0x0000000000000000000000000000000000000002], spender: PoolSwapTest: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   └─ ← [Return] true
    ├─ [24305] MockERC20::approve(TestSpendSaveHook: [0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   ├─ emit Approval(owner: SHA-256: [0x0000000000000000000000000000000000000002], spender: TestSpendSaveHook: [0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0], amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   └─ ← [Return] true
    ├─ [24305] MockERC20::approve(TestSpendSaveHook: [0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   ├─ emit Approval(owner: SHA-256: [0x0000000000000000000000000000000000000002], spender: TestSpendSaveHook: [0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0], amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   └─ ← [Return] true
    ├─ [24305] MockERC20::approve(TestSpendSaveHook: [0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   ├─ emit Approval(owner: SHA-256: [0x0000000000000000000000000000000000000002], spender: TestSpendSaveHook: [0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0], amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   └─ ← [Return] true
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return] 
    ├─ [0] console::log("============ SETUP COMPLETE ============") [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] console::log("Initializing test pool with hook...") [staticcall]
    │   └─ ← [Stop] 
    ├─ [29456] PoolManager::initialize(PoolKey({ currency0: 0x15cF58144EF33af1e14b5208015d11F9143E27b9, currency1: 0x212224D2F2d262cd093eE13240ca4873fcCBbA3C, fee: 3000, tickSpacing: 60, hooks: 0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0 }), 79228162514264337593543950336 [7.922e28])
    │   ├─ emit Initialize(id: 0xe2148c5d0a0e91f4816d1e8874c931c6599262c1aa8966def711286a4a5b8580, currency0: MockERC20: [0x15cF58144EF33af1e14b5208015d11F9143E27b9], currency1: MockERC20: [0x212224D2F2d262cd093eE13240ca4873fcCBbA3C], fee: 3000, tickSpacing: 60, hooks: TestSpendSaveHook: [0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0], sqrtPriceX96: 79228162514264337593543950336 [7.922e28], tick: 0)
    │   └─ ← [Return] 0
    ├─ [0] console::log("Pool initialized successfully") [staticcall]
    │   └─ ← [Stop] 
    ├─ [24305] MockERC20::approve(PoolManager: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   ├─ emit Approval(owner: SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], spender: PoolManager: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   └─ ← [Return] true
    ├─ [24305] MockERC20::approve(PoolManager: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   ├─ emit Approval(owner: SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], spender: PoolManager: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   └─ ← [Return] true
    ├─ [24305] MockERC20::approve(PoolModifyLiquidityTest: [0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   ├─ emit Approval(owner: SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], spender: PoolModifyLiquidityTest: [0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9], amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   └─ ← [Return] true
    ├─ [24305] MockERC20::approve(PoolModifyLiquidityTest: [0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   ├─ emit Approval(owner: SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], spender: PoolModifyLiquidityTest: [0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9], amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   └─ ← [Return] true
    ├─ [2698] MockERC20::mint(SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 100000000000000000000 [1e20])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], amount: 100000000000000000000 [1e20])
    │   └─ ← [Stop] 
    ├─ [2698] MockERC20::mint(SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], 100000000000000000000 [1e20])
    │   ├─ emit Transfer(from: 0x0000000000000000000000000000000000000000, to: SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], amount: 100000000000000000000 [1e20])
    │   └─ ← [Stop] 
    ├─ [250148] PoolModifyLiquidityTest::modifyLiquidity(PoolKey({ currency0: 0x15cF58144EF33af1e14b5208015d11F9143E27b9, currency1: 0x212224D2F2d262cd093eE13240ca4873fcCBbA3C, fee: 3000, tickSpacing: 60, hooks: 0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0 }), ModifyLiquidityParams({ tickLower: -887220 [-8.872e5], tickUpper: 887220 [8.872e5], liquidityDelta: 10, salt: 0x0000000000000000000000000000000000000000000000000000000000000000 }), 0x)
    │   ├─ [246757] PoolManager::unlock(0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000007fa9385be102ac3eac297483dd6233d62b3e149600000000000000000000000015cf58144ef33af1e14b5208015d11f9143e27b9000000000000000000000000212224d2f2d262cd093ee13240ca4873fccbba3c0000000000000000000000000000000000000000000000000000000000000bb8000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000f3de0a2b9f65d050975b1ff9a01aad27673e80c0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2764c00000000000000000000000000000000000000000000000000000000000d89b4000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
    │   │   ├─ [244492] PoolModifyLiquidityTest::unlockCallback(0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000007fa9385be102ac3eac297483dd6233d62b3e149600000000000000000000000015cf58144ef33af1e14b5208015d11f9143e27b9000000000000000000000000212224d2f2d262cd093ee13240ca4873fccbba3c0000000000000000000000000000000000000000000000000000000000000bb8000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000f3de0a2b9f65d050975b1ff9a01aad27673e80c0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2764c00000000000000000000000000000000000000000000000000000000000d89b4000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
    │   │   │   ├─ [6952] PoolManager::extsload(0xa161a09e06326f60444f2b85a0dbd4f89826711398842d6c0b101c5d34e1dd6d, 3) [staticcall]
    │   │   │   │   └─ ← [Return] [0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000]
    │   │   │   ├─ [159103] PoolManager::modifyLiquidity(PoolKey({ currency0: 0x15cF58144EF33af1e14b5208015d11F9143E27b9, currency1: 0x212224D2F2d262cd093eE13240ca4873fcCBbA3C, fee: 3000, tickSpacing: 60, hooks: 0xf3de0A2B9F65D050975b1fF9A01aAD27673e80C0 }), ModifyLiquidityParams({ tickLower: -887220 [-8.872e5], tickUpper: 887220 [8.872e5], liquidityDelta: 10, salt: 0x0000000000000000000000000000000000000000000000000000000000000000 }), 0x)
    │   │   │   │   ├─ emit ModifyLiquidity(id: 0xe2148c5d0a0e91f4816d1e8874c931c6599262c1aa8966def711286a4a5b8580, sender: PoolModifyLiquidityTest: [0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9], tickLower: -887220 [-8.872e5], tickUpper: 887220 [8.872e5], liquidityDelta: 10, salt: 0x0000000000000000000000000000000000000000000000000000000000000000)
    │   │   │   │   └─ ← [Return] -3062541302288446171170371466885913903114 [-3.062e39], 0
    │   │   │   ├─ [952] PoolManager::extsload(0xa161a09e06326f60444f2b85a0dbd4f89826711398842d6c0b101c5d34e1dd6d, 3) [staticcall]
    │   │   │   │   └─ ← [Return] [0x000000000000000000000000000000000000000000000000000000000000000a, 0x0000000000000000000000000000000000000000000000000000000000000000, 0x0000000000000000000000000000000000000000000000000000000000000000]
    │   │   │   ├─ [552] MockERC20::balanceOf(SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]) [staticcall]
    │   │   │   │   └─ ← [Return] 1100000000000000000000 [1.1e21]
    │   │   │   ├─ [2552] MockERC20::balanceOf(PoolManager: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f]) [staticcall]
    │   │   │   │   └─ ← [Return] 0
    │   │   │   ├─ [862] PoolManager::exttload(0xcf5cd0ac721951aa4164b74919fe5a69903ef28c5fea9471c55675bedfd05b54) [staticcall]
    │   │   │   │   └─ ← [Return] 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6
    │   │   │   ├─ [552] MockERC20::balanceOf(SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496]) [staticcall]
    │   │   │   │   └─ ← [Return] 1100000000000000000000 [1.1e21]
    │   │   │   ├─ [2552] MockERC20::balanceOf(PoolManager: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f]) [staticcall]
    │   │   │   │   └─ ← [Return] 0
    │   │   │   ├─ [862] PoolManager::exttload(0x4ced1cdfa505d5df3a1a9816f8c9eab67700dcc6aa2fe920a0d6579837fb9ce6) [staticcall]
    │   │   │   │   └─ ← [Return] 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6
    │   │   │   ├─ [2017] PoolManager::sync(MockERC20: [0x15cF58144EF33af1e14b5208015d11F9143E27b9])
    │   │   │   │   ├─ [552] MockERC20::balanceOf(PoolManager: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f]) [staticcall]
    │   │   │   │   │   └─ ← [Return] 0
    │   │   │   │   └─ ← [Stop] 
    │   │   │   ├─ [23007] MockERC20::transferFrom(SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], PoolManager: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10)
    │   │   │   │   ├─ emit Transfer(from: SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], to: PoolManager: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], amount: 10)
    │   │   │   │   └─ ← [Return] true
    │   │   │   ├─ [2743] PoolManager::settle()
    │   │   │   │   ├─ [552] MockERC20::balanceOf(PoolManager: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f]) [staticcall]
    │   │   │   │   │   └─ ← [Return] 10
    │   │   │   │   └─ ← [Return] 10
    │   │   │   ├─ [2017] PoolManager::sync(MockERC20: [0x212224D2F2d262cd093eE13240ca4873fcCBbA3C])
    │   │   │   │   ├─ [552] MockERC20::balanceOf(PoolManager: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f]) [staticcall]
    │   │   │   │   │   └─ ← [Return] 0
    │   │   │   │   └─ ← [Stop] 
    │   │   │   ├─ [23007] MockERC20::transferFrom(SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], PoolManager: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 10)
    │   │   │   │   ├─ emit Transfer(from: SpendSaveHookTest: [0x7FA9385bE102ac3EAc297483Dd6233D62b3e1496], to: PoolManager: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], amount: 10)
    │   │   │   │   └─ ← [Return] true
    │   │   │   ├─ [2743] PoolManager::settle()
    │   │   │   │   ├─ [552] MockERC20::balanceOf(PoolManager: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f]) [staticcall]
    │   │   │   │   │   └─ ← [Return] 10
    │   │   │   │   └─ ← [Return] 10
    │   │   │   └─ ← [Return] 0xfffffffffffffffffffffffffffffff6fffffffffffffffffffffffffffffff6
    │   │   └─ ← [Return] 0xfffffffffffffffffffffffffffffff6fffffffffffffffffffffffffffffff6
    │   └─ ← [Return] -3062541302288446171170371466885913903114 [-3.062e39]
    ├─ [0] console::log("Liquidity added successfully") [staticcall]
    │   └─ ← [Stop] 
    └─ ← [Return] 

  [12857] SpendSaveHookTest::testSetup()
    ├─ [0] VM::assertTrue(true, "Hook not deployed") [staticcall]
    │   └─ ← [Return] 
    ├─ [0] VM::assertTrue(true, "Storage not deployed") [staticcall]
    │   └─ ← [Return] 
    ├─ [0] VM::assertTrue(true, "Hook address doesn't have required flags") [staticcall]
    │   └─ ← [Return] 
    ├─ [0] console::log("Setup test passed!") [staticcall]
    │   └─ ← [Stop] 
    └─ ← [Return] 

Suite result: ok. 1 passed; 0 failed; 0 skipped; finished in 11.52ms (180.71µs CPU time)

Ran 1 test suite in 1.30s (11.52ms CPU time): 1 tests passed, 0 failed, 0 skipped (1 total tests)
