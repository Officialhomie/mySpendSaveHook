No files changed, compilation skipped

Ran 1 test for test/SpendSaveHook.t.sol:SpendSaveHookTest
[PASS] testBasicSwap() (gas: 333764)
Logs:
  ============ SETUP START ============
  Deploying core contracts...
  Deploying storage...
  Deploying modules...
  Deploying hook using HookMiner...
  Hook address will be: 0x6DA70872785a1BF2b0C0Ca86011aE062f2AD40c0
  Flags: 192
  Hook deployed at: 0x6DA70872785a1BF2b0C0Ca86011aE062f2AD40c0
  Hook flags: 192
  ============ SETUP COMPLETE ============
  Initializing test pool with hook...
  Pool initialized successfully
  Liquidity added in -60 to +60 range
  Liquidity added in -120 to +120 range
  Liquidity added for full range
  Savings Strategy Percentage: 1000
  Savings Type: 1
  User1 token0 balance before swap: 10000000000000000000000
  Performing swap:
    Sender: 0x0000000000000000000000000000000000000001
    Zero for One: true
    Amount Specified: 500000000000000000
    TokenIn: 0x15cF58144EF33af1e14b5208015d11F9143E27b9
    TokenOut: 0x212224D2F2d262cd093eE13240ca4873fcCBbA3C
    BalanceInBefore: 10000000000000000000000
    BalanceOutBefore: 10000000000000000000000
    Swap Successful
    Delta0: -519557315493842838
    Delta1: 500000000000000000
    BalanceInAfter: 9999480442684506157162
    BalanceOutAfter: 10000000000000000000000
    Amount In: 519557315493842838
    Amount Out: 0
  User1 token0 balance after swap: 9999480442684506157162
  User1 savings balance: 0

Traces:
  [339364] SpendSaveHookTest::testBasicSwap()
    ├─ [11298] SpendSaveStorage::getUserSavingStrategy(ECRecover: [0x0000000000000000000000000000000000000001]) [staticcall]
    │   └─ ← [Return] 1000, 0, 1000, 0, false, false, 1, 0x0000000000000000000000000000000000000000
    ├─ [0] console::log("Savings Strategy Percentage:", 1000) [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] console::log("Savings Type:", 1) [staticcall]
    │   └─ ← [Stop] 
    ├─ [2552] MockERC20::balanceOf(ECRecover: [0x0000000000000000000000000000000000000001]) [staticcall]
    │   └─ ← [Return] 10000000000000000000000 [1e22]
    ├─ [0] console::log("User1 token0 balance before swap:", 10000000000000000000000 [1e22]) [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] VM::startPrank(ECRecover: [0x0000000000000000000000000000000000000001])
    │   └─ ← [Return] 
    ├─ [552] MockERC20::balanceOf(ECRecover: [0x0000000000000000000000000000000000000001]) [staticcall]
    │   └─ ← [Return] 10000000000000000000000 [1e22]
    ├─ [2552] MockERC20::balanceOf(ECRecover: [0x0000000000000000000000000000000000000001]) [staticcall]
    │   └─ ← [Return] 10000000000000000000000 [1e22]
    ├─ [0] console::log("Performing swap:") [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] console::log("  Sender:", ECRecover: [0x0000000000000000000000000000000000000001]) [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] console::log("  Zero for One:", true) [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] console::log("  Amount Specified:", 500000000000000000 [5e17]) [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] console::log("  TokenIn:", MockERC20: [0x15cF58144EF33af1e14b5208015d11F9143E27b9]) [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] console::log("  TokenOut:", MockERC20: [0x212224D2F2d262cd093eE13240ca4873fcCBbA3C]) [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] console::log("  BalanceInBefore:", 10000000000000000000000 [1e22]) [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] console::log("  BalanceOutBefore:", 10000000000000000000000 [1e22]) [staticcall]
    │   └─ ← [Stop] 
    ├─ [4405] MockERC20::approve(PoolSwapTest: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   ├─ emit Approval(owner: ECRecover: [0x0000000000000000000000000000000000000001], spender: PoolSwapTest: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   └─ ← [Return] true
    ├─ [4405] MockERC20::approve(SavingStrategy: [0xD16d567549A2a2a2005aEACf7fB193851603dd70], 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   ├─ emit Approval(owner: ECRecover: [0x0000000000000000000000000000000000000001], spender: SavingStrategy: [0xD16d567549A2a2a2005aEACf7fB193851603dd70], amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935 [1.157e77])
    │   └─ ← [Return] true
    ├─ [250833] PoolSwapTest::swap(PoolKey({ currency0: 0x15cF58144EF33af1e14b5208015d11F9143E27b9, currency1: 0x212224D2F2d262cd093eE13240ca4873fcCBbA3C, fee: 3000, tickSpacing: 60, hooks: 0x6DA70872785a1BF2b0C0Ca86011aE062f2AD40c0 }), SwapParams({ zeroForOne: true, amountSpecified: 500000000000000000 [5e17], sqrtPriceLimitX96: 4295128740 [4.295e9] }), TestSettings({ takeClaims: true, settleUsingBurn: false }), 0x)
    │   ├─ [245029] PoolManager::unlock(0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000015cf58144ef33af1e14b5208015d11f9143e27b9000000000000000000000000212224d2f2d262cd093ee13240ca4873fccbba3c0000000000000000000000000000000000000000000000000000000000000bb8000000000000000000000000000000000000000000000000000000000000003c0000000000000000000000006da70872785a1bf2b0c0ca86011ae062f2ad40c0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000006f05b59d3b2000000000000000000000000000000000000000000000000000000000001000276a400000000000000000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000000)
    │   │   ├─ [242770] PoolSwapTest::unlockCallback(0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000015cf58144ef33af1e14b5208015d11f9143e27b9000000000000000000000000212224d2f2d262cd093ee13240ca4873fccbba3c0000000000000000000000000000000000000000000000000000000000000bb8000000000000000000000000000000000000000000000000000000000000003c0000000000000000000000006da70872785a1bf2b0c0ca86011ae062f2ad40c0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000006f05b59d3b2000000000000000000000000000000000000000000000000000000000001000276a400000000000000000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000000)
    │   │   │   ├─ [552] MockERC20::balanceOf(ECRecover: [0x0000000000000000000000000000000000000001]) [staticcall]
    │   │   │   │   └─ ← [Return] 10000000000000000000000 [1e22]
    │   │   │   ├─ [2552] MockERC20::balanceOf(PoolManager: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f]) [staticcall]
    │   │   │   │   └─ ← [Return] 10089770927164204436 [1.008e19]
    │   │   │   ├─ [862] PoolManager::exttload(0x85be7c2bd5cfd9e6e3a30072d5be012f0c0649c579d3433f4d5ee458bdb429be) [staticcall]
    │   │   │   │   └─ ← [Return] 0x0000000000000000000000000000000000000000000000000000000000000000
    │   │   │   ├─ [552] MockERC20::balanceOf(ECRecover: [0x0000000000000000000000000000000000000001]) [staticcall]
    │   │   │   │   └─ ← [Return] 10000000000000000000000 [1e22]
    │   │   │   ├─ [2552] MockERC20::balanceOf(PoolManager: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f]) [staticcall]
    │   │   │   │   └─ ← [Return] 10089770927164204436 [1.008e19]
    │   │   │   ├─ [862] PoolManager::exttload(0xec1690143798fa6d9be0e2ae9987311729015febf65e065811da6492f94dd07b) [staticcall]
    │   │   │   │   └─ ← [Return] 0x0000000000000000000000000000000000000000000000000000000000000000
    │   │   │   ├─ [179297] PoolManager::swap(PoolKey({ currency0: 0x15cF58144EF33af1e14b5208015d11F9143E27b9, currency1: 0x212224D2F2d262cd093eE13240ca4873fcCBbA3C, fee: 3000, tickSpacing: 60, hooks: 0x6DA70872785a1BF2b0C0Ca86011aE062f2AD40c0 }), SwapParams({ zeroForOne: true, amountSpecified: 500000000000000000 [5e17], sqrtPriceLimitX96: 4295128740 [4.295e9] }), 0x)
    │   │   │   │   ├─ [18092] TestSpendSaveHook::beforeSwap(PoolSwapTest: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], PoolKey({ currency0: 0x15cF58144EF33af1e14b5208015d11F9143E27b9, currency1: 0x212224D2F2d262cd093eE13240ca4873fcCBbA3C, fee: 3000, tickSpacing: 60, hooks: 0x6DA70872785a1BF2b0C0Ca86011aE062f2AD40c0 }), SwapParams({ zeroForOne: true, amountSpecified: 500000000000000000 [5e17], sqrtPriceLimitX96: 4295128740 [4.295e9] }), 0x)
    │   │   │   │   │   ├─ [11298] SpendSaveStorage::getUserSavingStrategy(PoolSwapTest: [0x2e234DAe75C793f67A35089C9d99245E1C58470b]) [staticcall]
    │   │   │   │   │   │   └─ ← [Return] 0, 0, 0, 0, false, false, 0, 0x0000000000000000000000000000000000000000
    │   │   │   │   │   └─ ← [Return] 0x575e24b4, 0, 0
    │   │   │   │   ├─ emit Swap(id: 0x080819a6a74b388396ba9c4f06651781788bda95721dc7835d0f4c7a7ed39831, sender: PoolSwapTest: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], amount0: -519557315493842838 [-5.195e17], amount1: 500000000000000000 [5e17], sqrtPriceX96: 75977992949193298311006862755 [7.597e28], liquidity: 10000000000000000000 [1e19], tick: -838, fee: 3000)
    │   │   │   │   ├─ [38555] TestSpendSaveHook::afterSwap(PoolSwapTest: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], PoolKey({ currency0: 0x15cF58144EF33af1e14b5208015d11F9143E27b9, currency1: 0x212224D2F2d262cd093eE13240ca4873fcCBbA3C, fee: 3000, tickSpacing: 60, hooks: 0x6DA70872785a1BF2b0C0Ca86011aE062f2AD40c0 }), SwapParams({ zeroForOne: true, amountSpecified: 500000000000000000 [5e17], sqrtPriceLimitX96: 4295128740 [4.295e9] }), -176796193067333615158850084296540762837171905543615152128 [-1.767e56], 0x)
    │   │   │   │   │   ├─ [32528] SpendSaveStorage::getSwapContext(PoolSwapTest: [0x2e234DAe75C793f67A35089C9d99245E1C58470b]) [staticcall]
    │   │   │   │   │   │   └─ ← [Return] SwapContext({ hasStrategy: false, currentPercentage: 0, roundUpSavings: false, enableDCA: false, dcaTargetToken: 0x0000000000000000000000000000000000000000, currentTick: 0, savingsTokenType: 0, specificSavingsToken: 0x0000000000000000000000000000000000000000, inputToken: 0x0000000000000000000000000000000000000000, inputAmount: 0 })
    │   │   │   │   │   └─ ← [Return] 0xb47b2fb1, 0
    │   │   │   │   └─ ← [Return] -176796193067333615158850084296540762837171905543615152128 [-1.767e56]
    │   │   │   ├─ [552] MockERC20::balanceOf(ECRecover: [0x0000000000000000000000000000000000000001]) [staticcall]
    │   │   │   │   └─ ← [Return] 10000000000000000000000 [1e22]
    │   │   │   ├─ [552] MockERC20::balanceOf(PoolManager: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f]) [staticcall]
    │   │   │   │   └─ ← [Return] 10089770927164204436 [1.008e19]
    │   │   │   ├─ [862] PoolManager::exttload(0x85be7c2bd5cfd9e6e3a30072d5be012f0c0649c579d3433f4d5ee458bdb429be) [staticcall]
    │   │   │   │   └─ ← [Return] 0xfffffffffffffffffffffffffffffffffffffffffffffffff8ca295fd188b06a
    │   │   │   ├─ [552] MockERC20::balanceOf(ECRecover: [0x0000000000000000000000000000000000000001]) [staticcall]
    │   │   │   │   └─ ← [Return] 10000000000000000000000 [1e22]
    │   │   │   ├─ [552] MockERC20::balanceOf(PoolManager: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f]) [staticcall]
    │   │   │   │   └─ ← [Return] 10089770927164204436 [1.008e19]
    │   │   │   ├─ [862] PoolManager::exttload(0xec1690143798fa6d9be0e2ae9987311729015febf65e065811da6492f94dd07b) [staticcall]
    │   │   │   │   └─ ← [Return] 0x00000000000000000000000000000000000000000000000006f05b59d3b20000
    │   │   │   ├─ [2017] PoolManager::sync(MockERC20: [0x15cF58144EF33af1e14b5208015d11F9143E27b9])
    │   │   │   │   ├─ [552] MockERC20::balanceOf(PoolManager: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f]) [staticcall]
    │   │   │   │   │   └─ ← [Return] 10089770927164204436 [1.008e19]
    │   │   │   │   └─ ← [Stop] 
    │   │   │   ├─ [8707] MockERC20::transferFrom(ECRecover: [0x0000000000000000000000000000000000000001], PoolManager: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], 519557315493842838 [5.195e17])
    │   │   │   │   ├─ emit Transfer(from: ECRecover: [0x0000000000000000000000000000000000000001], to: PoolManager: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f], amount: 519557315493842838 [5.195e17])
    │   │   │   │   └─ ← [Return] true
    │   │   │   ├─ [2743] PoolManager::settle()
    │   │   │   │   ├─ [552] MockERC20::balanceOf(PoolManager: [0x5615dEB798BB3E4dFa0139dFa1b3D433Cc23b72f]) [staticcall]
    │   │   │   │   │   └─ ← [Return] 10609328242658047274 [1.06e19]
    │   │   │   │   └─ ← [Return] 519557315493842838 [5.195e17]
    │   │   │   ├─ [26202] PoolManager::mint(ECRecover: [0x0000000000000000000000000000000000000001], 189158128598292903493480378438929206074730592828 [1.891e47], 500000000000000000 [5e17])
    │   │   │   │   ├─ emit Transfer(caller: PoolSwapTest: [0x2e234DAe75C793f67A35089C9d99245E1C58470b], from: 0x0000000000000000000000000000000000000000, to: ECRecover: [0x0000000000000000000000000000000000000001], id: 189158128598292903493480378438929206074730592828 [1.891e47], amount: 500000000000000000 [5e17])
    │   │   │   │   └─ ← [Stop] 
    │   │   │   └─ ← [Return] 0xfffffffffffffffff8ca295fd188b06a000000000000000006f05b59d3b20000
    │   │   └─ ← [Return] 0xfffffffffffffffff8ca295fd188b06a000000000000000006f05b59d3b20000
    │   └─ ← [Return] -176796193067333615158850084296540762837171905543615152128 [-1.767e56]
    ├─ [0] console::log("  Swap Successful") [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] console::log("  Delta0:", -519557315493842838 [-5.195e17]) [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] console::log("  Delta1:", 500000000000000000 [5e17]) [staticcall]
    │   └─ ← [Stop] 
    ├─ [552] MockERC20::balanceOf(ECRecover: [0x0000000000000000000000000000000000000001]) [staticcall]
    │   └─ ← [Return] 9999480442684506157162 [9.999e21]
    ├─ [552] MockERC20::balanceOf(ECRecover: [0x0000000000000000000000000000000000000001]) [staticcall]
    │   └─ ← [Return] 10000000000000000000000 [1e22]
    ├─ [0] console::log("  BalanceInAfter:", 9999480442684506157162 [9.999e21]) [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] console::log("  BalanceOutAfter:", 10000000000000000000000 [1e22]) [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] console::log("  Amount In:", 519557315493842838 [5.195e17]) [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] console::log("  Amount Out:", 0) [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return] 
    ├─ [552] MockERC20::balanceOf(ECRecover: [0x0000000000000000000000000000000000000001]) [staticcall]
    │   └─ ← [Return] 9999480442684506157162 [9.999e21]
    ├─ [0] console::log("User1 token0 balance after swap:", 9999480442684506157162 [9.999e21]) [staticcall]
    │   └─ ← [Stop] 
    ├─ [3467] SpendSaveStorage::savings(ECRecover: [0x0000000000000000000000000000000000000001], MockERC20: [0x15cF58144EF33af1e14b5208015d11F9143E27b9]) [staticcall]
    │   └─ ← [Return] 0
    ├─ [0] console::log("User1 savings balance:", 0) [staticcall]
    │   └─ ← [Stop] 
    ├─ [0] VM::assertTrue(true, "User should have spent token0") [staticcall]
    │   └─ ← [Return] 
    ├─ [0] VM::assertTrue(true, "User should have received token1") [staticcall]
    │   └─ ← [Return] 
    ├─ [0] VM::assertLt(9999480442684506157162 [9.999e21], 10000000000000000000000 [1e22], "User should have spent token0") [staticcall]
    │   └─ ← [Return] 
    └─ ← [Return] 

Suite result: ok. 1 passed; 0 failed; 0 skipped; finished in 481.03ms (833.96µs CPU time)

Ran 1 test suite in 486.90ms (481.03ms CPU time): 1 tests passed, 0 failed, 0 skipped (1 total tests)
